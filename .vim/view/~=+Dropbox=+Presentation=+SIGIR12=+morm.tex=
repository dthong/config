let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
argglobal
let s:cpo_save=&cpo
set cpo&vim
imap <buffer> <silent> <F9> <Plug>Tex_Completion
imap <buffer> <C-CR> <Plug>Tex_InsertItemOnNextLine
imap <buffer> <silent> <S-F7> <Plug>Tex_FastCommandChange
imap <buffer> <silent> <F7> <Plug>Tex_FastCommandInsert
inoremap <buffer> <silent> <S-F3> =Tex_PutEnvironment("bmatrix")
inoremap <buffer> <silent> <S-F2> =Tex_PutEnvironment("eqnarray")
inoremap <buffer> <silent> <S-F1> =Tex_PutEnvironment("eqnarray*")
imap <buffer> <silent> <S-F5> <Plug>Tex_FastEnvironmentChange
imap <buffer> <silent> <F5> <Plug>Tex_FastEnvironmentInsert
nmap <buffer> <silent> ,rf <Plug>Tex_RefreshFolds
nmap <buffer> ,ls <Plug>Tex_ForwardSearch
nmap <buffer> ,lv <Plug>Tex_View
vmap <buffer> ,ll <Plug>Tex_Compile
nmap <buffer> ,ll <Plug>Tex_Compile
imap <buffer> Ã© <Plug>Tex_InsertItemOnThisLine
nnoremap <buffer> <Plug>Tex_ForwardSearch :call Tex_ForwardSearchLaTeX()
nnoremap <buffer> <Plug>Tex_View :call Tex_ViewLaTeX()
vnoremap <buffer> <Plug>Tex_Compile :call Tex_PartCompile()
nnoremap <buffer> <Plug>Tex_Compile :call Tex_RunLaTeX()
vmap <buffer> <silent> <F7> <Plug>Tex_FastCommandInsert
nmap <buffer> <silent> <S-F7> <Plug>Tex_FastCommandChange
nmap <buffer> <silent> <F7> <Plug>Tex_FastCommandInsert
nmap <buffer> <silent> <S-F5> <Plug>Tex_FastEnvironmentChange
vmap <buffer> <silent> <F5> <Plug>Tex_FastEnvironmentInsert
nmap <buffer> <silent> <F5> <Plug>Tex_FastEnvironmentInsert
let &cpo=s:cpo_save
unlet s:cpo_save
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=(0
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=sO:%\ -,mO:%\ \ ,eO:%%,:%
setlocal commentstring=%%s
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal cursorline
setlocal define=\\\\\\([egx]\\|char\\|mathchar\\|count\\|dimen\\|muskip\\|skip\\|toks\\)\\=def\\|\\\\font\\|\\\\\\(future\\)\\=let\\|\\\\new\\(count\\|dimen\\|skip\\|muskip\\|box\\|toks\\|read\\|write\\|fam\\|insert\\)\\|\\\\\\(re\\)\\=new\\(boolean\\|command\\|counter\\|environment\\|font\\|if\\|length\\|savebox\\|theorem\\(style\\)\\=\\)\\s*\\*\\=\\s*{\\=\\|DeclareMathOperator\\s*{\\=\\s*
setlocal dictionary=~/.vim/ftplugin/latex-suite/dictionaries/dictionary
setlocal nodiff
setlocal equalprg=
setlocal errorformat=%*[^\"]\"%f\"%*\\D%l:\ %m,\"%f\"%*\\D%l:\ %m,%-G%f:%l:\ (Each\ undeclared\ identifier\ is\ reported\ only\ once,%-G%f:%l:\ for\ each\ function\ it\ appears\ in.),%-GIn\ file\ included\ from\ %f:%l:%c:,%-GIn\ file\ included\ from\ %f:%l:%c,%-GIn\ file\ included\ from\ %f:%l,%-Gfrom\ %f:%l:%c,%-Gfrom\ %f:%l,%f:%l:%c:%m,%f(%l):%m,%f:%l:%m,\"%f\"\\,\ line\ %l%*\\D%c%*[^\ ]\ %m,%D%*\\a[%*\\d]:\ Entering\ directory\ `%f',%X%*\\a[%*\\d]:\ Leaving\ directory\ `%f',%D%*\\a:\ Entering\ directory\ `%f',%X%*\\a:\ Leaving\ directory\ `%f',%DMaking\ %*\\a\ in\ %f,%f|%l|\ %m,%-G%.%#Underfull%.%#,%-G%.%#Overfull%.%#,%-G%.%#specifier\ changed\ to%.%#,%-G%.%#You\ have\ requested%.%#,%-G%.%#Missing\ number%\\,\ treated\ as\ zero.%.%#,%-G%.%#There\ were\ undefined\ references%.%#,%-G%.%#Citation\ %.%#\ undefined%.%#,%-G%.%#LaTeX\ Font\ Warning:%.%#,%E!\ LaTeX\ %trror:\ %m,%E!\ %m,%E%f:%l:\ %m,%+WLaTeX\ %.%#Warning:\ %.%#line\ %l%.%#,%+W%.%#\ at\ lines\ %l--%*\\d,%+WLaTeX\ %.%#Warning:\ %m,%-Cl.%l\ %m,%-Cl.%l\ ,%-C\ \ %m,%-C%.%#-%.%#,%-C%.%#[]%.%#,%-C[]%.%#,%-C%.%#%[{}\\]%.%#,%-C<%.%#>%m,%-GSee\ the\ LaTeX%m,%-GType\ \ H\ <return>%m,%-G\ ...%.%#,%-G%.%#\ (C)\ %.%#,%-G(see\ the\ transcript%.%#),%-G\\s%#,%-O(%*[^()])%r,%-P(%f%r,%-P\ %\\=(%f%r,%-P%*[^()](%f%r,%-P(%f%*[^()],%-P[%\\d%[^()]%#(%f%r,%-P%*[^()],%-Q)%r,%-Q%*[^()])%r,%-Q[%\\d%*[^()])%r,%-Q%*[^()],%-G%.%#
setlocal noexpandtab
if &filetype != 'tex'
setlocal filetype=tex
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=TexFoldTextFunction()
setlocal formatexpr=
setlocal formatoptions=aw
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=\\\\input\\|\\\\include{
setlocal includeexpr=substitute(v:fname,\ '^.\\{-}{\\|}.*',\ '',\ 'g')
setlocal indentexpr=GetTeXIndent()
setlocal indentkeys=o,O,<Return>,<>>,{,},!^F,},=\\item,=\\bibitem
setlocal noinfercase
setlocal iskeyword=48-57,a-z,A-Z,192-255,:
setlocal keywordprg=
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal macmeta
setlocal makeprg=pdflatex\ -synctex=1\ --interaction=nonstopmode\ $*
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal number
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal spell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=.tex
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != 'tex'
setlocal syntax=tex
endif
setlocal tabstop=2
setlocal tags=
setlocal textwidth=80
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
silent! normal! zE
1,94fold
99,109fold
132,132fold
133,133fold
134,134fold
129,136fold
139,139fold
140,141fold
137,143fold
147,147fold
148,148fold
149,149fold
150,150fold
151,151fold
152,152fold
153,154fold
144,155fold
170,170fold
171,171fold
172,173fold
174,175fold
168,176fold
188,189fold
190,191fold
214,214fold
215,215fold
216,216fold
110,230fold
243,243fold
244,244fold
245,245fold
241,247fold
248,248fold
262,262fold
263,263fold
264,264fold
265,265fold
259,267fold
268,278fold
268,278fold
268,278fold
293,293fold
294,294fold
295,296fold
291,298fold
299,300fold
313,313fold
314,314fold
315,315fold
316,316fold
311,317fold
318,323fold
335,335fold
336,337fold
340,342fold
343,348fold
338,350fold
231,356fold
365,366fold
367,369fold
370,372fold
373,374fold
386,386fold
387,387fold
390,391fold
392,392fold
388,393fold
394,394fold
395,395fold
396,396fold
441,463fold
500,520fold
528,548fold
557,563fold
357,570fold
581,582fold
583,584fold
585,585fold
579,587fold
590,591fold
592,592fold
588,593fold
606,606fold
607,608fold
571,614fold
1
normal zo
99
normal zc
110
normal zo
129
normal zo
132
normal zc
133
normal zc
134
normal zc
129
normal zc
137
normal zo
139
normal zc
140
normal zc
137
normal zc
144
normal zo
147
normal zc
148
normal zc
149
normal zc
150
normal zc
151
normal zc
152
normal zc
153
normal zc
144
normal zc
168
normal zo
170
normal zc
171
normal zc
172
normal zc
174
normal zc
168
normal zc
188
normal zc
190
normal zc
214
normal zc
215
normal zc
216
normal zc
110
normal zo
231
normal zo
241
normal zo
243
normal zc
244
normal zc
245
normal zc
241
normal zc
248
normal zc
259
normal zo
262
normal zc
263
normal zc
264
normal zc
265
normal zc
259
normal zc
268
normal zo
268
normal zo
268
normal zc
268
normal zc
268
normal zc
291
normal zo
293
normal zc
294
normal zc
295
normal zc
291
normal zc
299
normal zc
311
normal zo
313
normal zc
314
normal zc
315
normal zc
316
normal zc
311
normal zc
318
normal zc
335
normal zc
336
normal zc
338
normal zo
340
normal zc
343
normal zc
338
normal zc
231
normal zc
357
normal zo
365
normal zc
367
normal zc
370
normal zc
373
normal zc
386
normal zc
387
normal zc
388
normal zo
390
normal zc
392
normal zc
388
normal zc
394
normal zc
395
normal zc
396
normal zc
441
normal zc
500
normal zc
528
normal zc
557
normal zc
357
normal zc
571
normal zo
579
normal zo
581
normal zc
583
normal zc
585
normal zc
579
normal zc
588
normal zo
590
normal zc
592
normal zc
588
normal zc
606
normal zc
607
normal zc
571
normal zc
let s:l = 114 - ((27 * winheight(0) + 16) / 32)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
114
normal! 0
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
" vim: set ft=vim :
